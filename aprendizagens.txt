Não mexer com as permissões de arquivos e pastas de serviços de armazenamento de dados


CRONTAB
Para usar um bash que não esteja na pasta bin do sistema é possível usar o comando como no exemplo: 0 10 * * * bash -l -c "<comando>"


REGEX
Regex para encontrar o formato de anos 0000 a|A 0001 = r'(\d{4}\s[aA]{1}\s\d{4})'
Regex para encontrar ceps = r'(\b\d{2}[\s\.-]?\d{3}[\s\.-]?\d{3}\b)'
Regex para validar email = r'^(([a-zA-Z\d\.-_]+)@([a-zA-Z\d]+)\.([a-z-A-Z]{2,8})(\.[a-zA-Z]{2,8})?)$'


JAVASCRIPT
dá para converter datas do formato iso com horário em utc colocando "UTC" ao final da string;


PYTHON

Instalar no Mac roseta m1 brew install --build-from-source python@3.9

*gunicorn:
é possível alterar a quantidade de workers no processo, assim como alterar a classe de thread para gthreads, que são os melhores no caso de contato com api externa ou redis;

*requests:
para enviar um arquivo preciso colocar o tipo mime dele na mesma túpula para usar na request;

*django:
Nunca deletar nenhum contenttypes
é possível usar um backend customizado para usar o email como autenticação, também é possível usar
um backend customizado para authenticação por token;
quando um field booleano de pesquisa não estiver funcionando com 1 ou 0, é possível que exista bug,
para corrigir tem que converter pra True ou False;
cada migração nova feita deve ter o deploy feito, para evitar transtornos com o banco de dados;
transações atômicas são melhor performadas dentro de um bloco "with atomic():" pois desbloqueiam a conexão
para ser usada em casos de loop;
para evitar que campos de estoque e preços sejam alterados ao salvar uma instância qualquer, principalmente nos serializers,
basta remover o field dos forms, necessitando assim de um método para alterar preço e estoque individualmente em cada produto;
ao deletar um item, deve-se imediatamente encerrar a função para que ela não gere um novo cadastro do mesmo ao salvar uma instancia já deletada;
a posição da declaração dos fields do ModelForm pode interferir na validação;
para habilitar as urls com o mesmo nome do domínio é preciso usar a variável USE_X_FORWARDED_HOST = True e adicinoar o header nas configurações do nginx;
é possível desfazer uma migração usando o comando manage.py migrate <app> <arquivo da migração anterior>
---para fazer o drop de uma tabela primeiro precisamos do mode dela, que pode conseguido com estes comandos:
---from django.db import connection
---tables = connection.introspection.table_names()
---for tabela in tables:
---	try:
---		connection.cursor.execute('DROP TABLE <nome da tabela> CASCADE;')
---	except:
---		pass

*channels:
para funcionar corretamente precisa usar uma configuração especial de ssl, porém pra debugar tem que ser a url pura;
tem que usar a variável CSRF_TRUSTED_ORIGINS habilitando o site correto;

*celery:
não pode deixar um decorator sem uma tarefa abaixo, pois ele trava a aplicação e não gera nenhum log de erro;
o bug das tarefas periódicas rodando várias vezes é resolvido retirando a especificação da fila;
para as prioridades funcionarem precisa ter as seguintes configurações:
	CELERYD_PREFETCH_MULTIPLIER = 1
	CELERY_PREFETCH_MULTIPLIER = 1
	CELERY_TASK_CREATE_MISSING_QUEUES=True
	CELERY_BROKER_TRANSPORT_OPTIONS = {
    		'priority_steps': list(range(4)),
    		'queue_order_strategy': 'priority',
    		'sep':':'
	};
Quando houver o erro de gdbm, basta instalar o python3.8-gdbm, o erro que impede o script de reconhecer o formato do banco de dados;



HEROKU

*deployment:
nunca fazer deploymente próximo ao horário de fim de expediente;
sempre testar função antes de fazer o deploy;
sempre configurar a política de memória do redis com "heroku redis:maxmemory redis-polished-28585(nome do addon) --policy volatile-lru";
sempre confugurar janela de manutenção do reids para com o comando: heroku redis:maintenance --window="Sunday 5:00", assim a manutenção irá ocorrer às 2 da manhã de domingo;



GIT

é possível descartar um commit usando "git reset --hard HEAD~(quantos commits precisa voltar)";
para voltar para a cabeça basta usar "git switch (nome da cabeça)";
Para remover os arquivos verdes do repositório usa o comando "git clean -fd"
para fazer merge de branch é preciso apagar todas as pastas pycache de ambas as branchs;
para usar SSH precisa pegar a url ssh no github e usar comando git remote set-url origin <url>;
para remover arquivos que não podem mais ser trackeados se usa o comando "git rm -r --cached .", depois é só adicionar novamente e fazer um commit;
Se as funções do git estiverem lentas, é possível tentar adicionar o conteúdo a seguir no arquivo /etc/ssh/ssh_config: 
	Host gitlab.com
		AddressFamily inet



RECEBIMENTO DE DADO EXTERNO

*notificações:
é possível que se receber uma notificação na primeira vez tudo ocorra bem, é necessário simular o recebimento consecutivo para saber se algo será alterado;
para os dados externos não pode se usar um datetime now para last_update, deve se tirar esta informação de outro lugar;
verificar se o dado externo deve alterar mais de um dado interno, por exemplo informações sobre pedidos de carrinhos;



MERCADOLIVRE

*alteração dos anúncios:
aparentemente qualquer alteração no anúncio retorna todos o json do mesmo, precisa verificar alguns detalhes para colocar
os dados atualizados no cadastro do anúncio após as alterações;


LINUX
Para renovar o letencript, precisa logar como root "sudo -s" entrar no venv/bin onde tem o certbot instalado e rodar "certbot renew --force-renewal";
Para facilmente deletar arquivos "find . -name "*.bak" -type f -delete"
Para facilmente deletar pastas "find . -name "__pycache__" -type d -exec rm -rf {} +"
Para fazer o rodízio de logs usar o commando "sudo journalctl --rotate" e para configurar limiter, configurar o arquivo /etc/systemd/journald.conf;
Para um comando ser encontrado no crontab e pelo ssh, deve haver um link para o bash no caminho /usr/bin;
é possível filtar os logs em um range específico de tempo com o comando sed. ex: sed -n '/2018-04-12 14:44:00.000/,/2018-04-12 14:45:00.000/p' <arquivo de log>, ex: /var/log/syslog
em caso de demora para início de requisição, pode ser problema de dns, colocando o do google pode resolver(nameserver 8.8.8.8) no /etc/resolv.conf
para adicionar variáveis permanentes é necessário editar o arquivo ~/.profile usando export <variável>=<valor>;
para logar usando ssh, é necessário gerar uma chave na máquina local e usar o comando
cat <local da chave pública local> | ssh user@host "mkdir ~/.ssh && cat >> ~/.ssh/authorized_keys"(o comando mkdir cria a pasta se ainda não existe, >> é pra adicionar em vez de fazer override) o comando precisa estar entre aspas;
* é necessário que todos os seviços importantes sejam habilitados para rodar ao boot;
	-- comandos uteis:
	* journalctl -u <nome do serviço> -f;
	* systemctl restart,start ...;
	* ncdu (precisa intalar com apt get);
	* sudo chmod +x <file name>, adiciona a possibilidade de executar um arquivo bash;
	* scp <arquivo local> <user>@<domain>:<local destino> , para fazer upload de arquivo pro servidor (-r recursivo para quando for uma pasta);
	* scp <user>@<domain>:<local do arquivo desejado> <local destino>, para fazer download de arquivo do servidor;
	* ufw enable, delete...;
	* rm -r <arquivo> , deletar arquivo;
	* passwd <user name> pra alterar a senha de um usuário;
	* crontab -e , para criar schedules;

PROCESS STATE CODES
       Here are the different values that the s, stat and state output specifiers (header "STAT" or "S") will display to describe the state of a process:
       D    uninterruptible sleep (usually IO)
       R    running or runnable (on run queue)
       S    interruptible sleep (waiting for an event to complete)
       T    stopped, either by a job control signal or because it is being traced.
       W    paging (not valid since the 2.6.xx kernel)
       X    dead (should never be seen)
       Z    defunct ("zombie") process, terminated but not reaped by its parent.

       For BSD formats and when the stat keyword is used, additional characters may be displayed:
       <    high-priority (not nice to other users)
       N    low-priority (nice to other users)
       L    has pages locked into memory (for real-time and custom IO)
       s    is a session leader
       l    is multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
       +    is in the foreground process group.
Para instalar o linux na utm pode instalar a versão server e depois instalar o tasksel com o att e depois usar o comando "tasksel Install ubuntu-desktop" para instalar a interface gráfica;
Depois é necessário instalar os drivers de vídeo spice-vdagent e spice-webdavd;
* para usar o cedilha em máquina virtual basta seguir o tutorial do link https://github.dev/marcopaganini/gnome-cedilla-fix e alterar o layout do teclado para English(US,intl.,with dead keys);
Para desabilitar o uso do sudo basta editar o arquivo /etc/sudoers: root ALL = (ALL) NOPASSWD:ALL;ß


NGINX
* não alterar o user no NGINX.conf para evitar problemas de permissão, que impactam no download de arquivos por exemplo; 
* é possível habilitar compressão de arquivos e também escolher quais os formatos para isso, aumenta muito a velocidade;

GUNICORN

* é possível escolher a quantidade de workers e a classe de threads, melhor gthreads;

POSTGRES
* quando o backup não puder ser concluído com a saída dizendo que não é possível usar o arquivo de entrada, pode ser que o backup está corrompido;
* quando for fazer o restore de um database, é necessário antes ter um usuário com o mesmo nome para vincular o banco de dados;
* sudo -u postgres psql;
* sudo -u postgres pg_gump -Fc <nome do database> > <local de destino do backup>, -Fc(compressão);
* sudo pg_restore -d <db name> -h <host ex:127.0.0.1> -U <nome do usuário> <local completo do arquivo>
* sudo -u postgres pg_restore -d <database> -Fc <backup> & , -Fc(por conta do formato .dump) -- funciona se o backup não for corrompido 16176
* para habilitar o uso remoto tem que editar o comando listen_addresses = '*' no arquivo postgresql.conf e no pg_hba.conf adicionar as duas linhas no final:
host    all             all              0.0.0.0/0                       md5
host    all             all              ::/0                            md5


REDIS
* é preciso alterar as o tipo de política de memória para allkeys-lru no arquivo de configuração do redis na diretiva maxmemory-policy

comando para pegar o tamanho do banco de dados
   SELECT
    pg_database.datname,
    pg_size_pretty(pg_database_size(pg_database.datname)) AS size
    FROM pg_database
    WHERE datname = '<nome do banco de dados>';

ou somente select pg_size_pretty(pg_database_size('<nome do banco de dados>'));


RABBITMQ
* é melhor para garantia de recebimento das mensagens;
* para habilitar o manager usa o comando "sudo rabbitmq-plugins enable rabbitmq_management";
* comandos para adicionar um usuário e configurar: sudo rabbitmqctl add_user <usuário> <senha>,sudo rabbitmqctl set_user_tags <usuário> administrator;
* é necessário adicionar as permissões ao vhost com o comando: rabbitmqctl set_permissions -p /(ou /<vhost>) <usuário> "." "." "."


pra fazer build do flutter no ios tem que usar o comando --no-tree-shake-icons


ANDROID EMULATOR
* é possível configurar o emulador para funcionar o teclado, editando o parâmetro hw.keyboard no arquivo que fica em ~/.android/avd/<device>/config.ini;



RUBY
Para instalar versões antigas do ruby no Mac, é necessário instalar uma versão mais antiga do openssl por exemplo a 1.0.2 e usar rbenv em vez de rvm, usando comandos com o prefixo "arch -x86_64";


UTM
Para instalar o Windows 11, vai parar inicialmente na instalação onde é necessário internet, porém é possível pular isso, abrindo o terminal com o atalho fn+shift+F10, e rodando o comando "oobe\bypassnro;"



ZSH

Para adicionar cores ao shell do Mac basta adicionar estas linhas ao .zshrc:
function parse_git_branch() {
    git branch 2> /dev/null | sed -n -e 's/^\* \ (.*\)/[\1]/p'
}

COLOR_DEF='%f'
COLOR_USR='%F{10}'
COLOR_DIR='%F{201}'
COLOR_GIT='%F{226}'
NEWLINE=$'\n'
setopt PROMPT_SUBST
export PROMPT='${COLOR_USR}%n ${COLOR_DIR}%2~${COLOR_GIT}$(parse_git_branch)${COLOR_DEF} $ '
Para procurar mais cores procurar por xterm 256color chart



BASH terminal

Para adicionar o nome da branch no terminal inserir no .bashrc
git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \$(git_branch) \$ "


SSH
Caso o servidor não esteja fazendo o uso das chaves, verificar permissões nas pastas, usar comando "sudo chmod -R 700 ~/.ssh"


VSCODE MAC
{
    "workbench.colorTheme": "Monokai Extended",
    "emmet.includeLanguages": {
        "erb": "html"
    },
    "workbench.iconTheme": "material-icon-theme",
    "editor.minimap.enabled": false,
    "editor.accessibilitySupport": "off",
    "editor.rulers": [
        80
    ],
    "editor.formatOnSave": false,
    "security.workspace.trust.untrustedFiles": "open",
    "html.format.contentUnformatted": "",
    "json.maxItemsComputed": 999999999999999,
    "terminal.integrated.defaultProfile.osx": "zsh",
    "editor.codeLens": false,
}


PARALLELS
Para digitar ç no windows e ubuntu, é necessário trocar os layouts dos teclados e usar ' + c 


DOCKER
No linux, para acessar um serviço do host tem que usar 172.17.0.1 ao invés de docker.host.internal
Quando der problema no docker no Mac:
sudo rm -rf ~/Library/Caches/com.docker.docker ~/Library/Cookies/com.docker.docker.binarycookies ~/Library/Group\ Containers/group.com.docker ~/Library/Logs/Docker\ Desktop ~/Library/Preferences/com.docker.docker.plist ~/Library/Preferences/com.electron.docker-frontend.plist ~/Library/Saved\ Application\ State/com.electron.docker-frontend.savedState ~/.docker /Library/LaunchDaemons/com.docker.vmnetd.plist /Library/PrivilegedHelperTools/com.docker.vmnetd /usr/local/lib/docker


GERAL

Cash On Delivery (COD) termo que não sabia ante na shopee


REACT NATIVE

Bibliotecas importantes:
react-native-swiper-flatlist
react-native-svg-app-icon


Se houver erro ao permitir estáticos no Ubuntu com nginx
sudo usermod -a -G $USER www-data


FLUTTER
Para dismiss do teclado geral FocusManager.instance.primaryFocus?.unfocus();

